<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<context:component-scan base-package="se.midport">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<jdbc:embedded-database id="dataSource" generate-name="true" type="HSQL" />

	<!-- <bean class="java.net.URI" id="dbUrl">
		<constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url"
			value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
		<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
	</bean> -->

	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="se.midport.entity" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
		<property name="persistenceProvider">
			<bean class="org.hibernate.jpa.HibernatePersistenceProvider"></bean>
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="txManager" />
	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<jpa:repositories base-package="se.midport.repository"
		entity-manager-factory-ref="emf" transaction-manager-ref="txManager" />

	<import resource="security.xml" />

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="mail.smtp2go.com" />
		<property name="port" value="2525" />
		<property name="username" value="passkiller@midportscandinavia.com" />
		<property name="password" value="MXJ0OWdvMXY0MjNt" />
		<property name="javaMailProperties">
			<props>
				<!-- Use SMTP transport protocol -->
				<prop key="mail.transport.protocol">smtp</prop>
				<!-- Use SMTP-AUTH to authenticate to SMTP server -->
				<!-- <prop key="mail.smtp.auth">true</prop> -->
				<!-- Use TLS to encrypt communication with SMTP server -->
				<!-- <prop key="mail.smtp.starttls.enable">true</prop> -->
				<!-- <prop key="mail.debug">true</prop> -->

			</props>
		</property>
	</bean>

	<!-- this is a template message that we can pre-load with default state -->
	<bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="passkiller@midportscandinavia.com" />
		<property name="subject" value="User Registration Confirmation" />
	</bean>
</beans>
